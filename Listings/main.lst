C51 COMPILER V9.59.0.0   MAIN                                                              12/05/2018 18:08:14 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REG52.H>
   2          #include <stdio.h>
   3          #include <string.h>
   4          /*------------------------------------------------
   5          The following string is the stuff we're gonna
   6          send into the serial port.
   7          ------------------------------------------------*/
   8          unsigned char xdata serial_input_buffer [] =
   9          "This is a test to see if this data gets "
  10          "injected into the serial port.\r\n"
  11          "Have fun.\r\n"
  12          "\r\n\r\n";
  13          
  14          /*---------------------------------------------------------
  15          Timer 1 Overflow Interrupt
  16          ---------------------------------------------------------*/
  17          unsigned int T1_ISR_count = 0;
  18          void T1_ISR(void) interrupt 3 { 
  19   1        T1_ISR_count++;
  20   1        TF1 = 0; // Reset the interrupt request
  21   1      }
  22          
  23          int i=0;
  24          int count =0;
  25          
  26          // Testing by use of word ".tie5Ronal"
  27          char key[11] = {'.', 't', 'i', 'e', '5', 'R', 'o', 'n', 'a', 'l', '\0'};
  28          char test[11] = {'1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '\0'};
  29          
  30          // Array to save time intervals between each user press
  31          unsigned int time_btw_ms[10];
  32          
  33          
  34          int temp = 0;
  35          
  36          void main (void) {
  37   1        /*Note : timer takes 277 micro seconds to overflow*/
  38   1        
  39   1        
  40   1        /*------------------------------------------------
  41   1          Setup the timer 1 to start in mode 2 with auto reload value of 0.
  42   1        ------------------------------------------------*/
  43   1                  // Setting the global interrupt
  44   1        SCON = 0x50;    // SCON:  mode 1, 8-bit UART, enable receiver
  45   1        TMOD |= 0x20;   // TMOD:  timer 1, mode 2, 16-bit 
  46   1        TH1 = 0x00;     // TH1:   Seting timer auto reload value to 0
  47   1        TR1 = 1;        // TR1:   timer 1 run
  48   1        TI = 1;         // TI:    set TI to send first char of UART
  49   1        IT1 = 0;
  50   1        //PCON |= 0x80;
  51   1        
  52   1        /*--------------------------------------
  53   1          Enable interrupts for timer 1.
  54   1        --------------------------------------*/
C51 COMPILER V9.59.0.0   MAIN                                                              12/05/2018 18:08:14 PAGE 2   

  55   1        ET1 = 1;        // Setting Timer 1 interrupt
  56   1        EA = 1; 
  57   1        // Allocating space for the data to be saved
  58   1        //int r = 9;  // Number of observed calculation
  59   1        //int c = 2;  // Number of users
  60   1        //float *features = (float *)malloc(r* sizeof(float));
  61   1        
  62   1        
  63   1        
  64   1        while (1) {
  65   2          char x = _getkey();
  66   2          if (x == test[i]) {
  67   3            i++;
  68   3            
  69   3            if(INT1 && i > 1){
  70   4              time_btw_ms[i] = 277 * T1_ISR_count;
  71   4              temp = ET1;
  72   4              printf("Letter number %d : %d ,ET1 : %d\n" , i , time_btw_ms[i], temp);
  73   4              T1_ISR_count = 0;       
  74   4            }
  75   3          }
  76   2          
  77   2          
  78   2           else { 
  79   3            printf("Another Key Pressed\n");
  80   3            i = 0;
  81   3          }
  82   2          
  83   2          if (i == 10) {
  84   3            count++;
  85   3            //T1_ISR_count = 0;
  86   3            printf("%d\n" , count);
  87   3          }
  88   2      
  89   2        }
  90   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    195    ----
   CONSTANT SIZE    =     58    ----
   XDATA SIZE       =     88    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     50       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
